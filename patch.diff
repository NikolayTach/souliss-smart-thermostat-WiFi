From 7eabb2b551b8ee91ae13f8d322144f9590dafea5 Mon Sep 17 00:00:00 2001
From: mcbittech <master.flavio.piccolo@gmail.com>
Date: Thu, 19 Jan 2017 14:19:15 +0100
Subject: [PATCH] Added Offset for DHT sensor

---
 .../e05_ESP8266_SST_webconf.ino                    |  2 +-
 e05_ESP8266_SST_webconf/menu.cpp                   | 60 ++++++++++++----------
 e05_ESP8266_SST_webconf/menu.h                     |  1 +
 .../preferences.default.to.rename                  |  3 ++
 e05_ESP8266_SST_webconf/read_save.cpp              |  3 +-
 e05_ESP8266_SST_webconf/read_save.h                |  2 +-
 6 files changed, 42 insertions(+), 29 deletions(-)

diff --git a/e05_ESP8266_SST_webconf/e05_ESP8266_SST_webconf.ino b/e05_ESP8266_SST_webconf/e05_ESP8266_SST_webconf.ino
index 70ce37f..2ff4c51 100644
--- a/e05_ESP8266_SST_webconf/e05_ESP8266_SST_webconf.ino
+++ b/e05_ESP8266_SST_webconf/e05_ESP8266_SST_webconf.ino
@@ -793,7 +793,7 @@ void getTemp() {
   fVal = dht.readTemperature();
   SERIAL_OUT.print("acquisizione Temperature: "); SERIAL_OUT.println(fVal);
   if (!isnan(fVal)) {
-    temperature = fVal; //memorizza temperatura se non è Not A Number
+    temperature = fVal + getOffsetDHT(); //memorizza temperatura se non è Not A Number + Offset DHT
     //Import temperature into T31 Thermostat
     ImportAnalog(SLOT_THERMOSTAT + 1, &temperature);
     ImportAnalog(SLOT_TEMPERATURE, &temperature);
diff --git a/e05_ESP8266_SST_webconf/menu.cpp b/e05_ESP8266_SST_webconf/menu.cpp
index a90f647..ecb153d 100644
--- a/e05_ESP8266_SST_webconf/menu.cpp
+++ b/e05_ESP8266_SST_webconf/menu.cpp
@@ -22,6 +22,7 @@ boolean bSystemChanged;
 int tZone;
 boolean bDayLightSavingTime;
 boolean bDoSystemReset=false;
+float fOffsetDHT;
 
 // Menu variables
 MenuSystem ms;
@@ -138,64 +139,64 @@ void on_itemBack_selected(MenuItem* p_menu_item)
 void on_item_perc100_selected(MenuItem* p_menu_item)
 {
   iDisplayBright = 100;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
 void on_item_perc80_selected(MenuItem* p_menu_item)
 {
   iDisplayBright = 80;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
 void on_item_perc60_selected(MenuItem* p_menu_item)
 {
   iDisplayBright = 60;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 
 }
 
 void on_item_perc50_selected(MenuItem* p_menu_item)
 {
   iDisplayBright = 50;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
 void on_item_perc30_selected(MenuItem* p_menu_item)
 {
   iDisplayBright = 30;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
 void on_item_perc5_selected(MenuItem* p_menu_item)
 {
   iDisplayBright = 5;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
 void on_item_perc2_selected(MenuItem* p_menu_item)
 {
   iDisplayBright = 2;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
 void on_item_clockON_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_clockON_selected");
   bClock = true;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 void on_item_clockOFF_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_clockOFF_selected");
   bClock = false;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
 void on_item_Timezone0_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_Timezone0_selected");
   tZone = 0;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
   initNTP();
 }
 
@@ -203,28 +204,28 @@ void on_item_Timezone1_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_Timezone1_selected");
   tZone = 1;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
   initNTP();
 }
 void on_item_Timezone2_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_Timezone2_selected");
   tZone = 2;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
   initNTP();
 }
 void on_item_Timezone3_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_Timezone3_selected");
   tZone = 3;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
   initNTP();
 }
 void on_item_Timezone4_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_Timezone4_selected");
   tZone = 4;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
   initNTP();
 }
 
@@ -232,7 +233,7 @@ void on_item_DayLightSavingTimeON_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_DayLightSavingTimeON");
   bDayLightSavingTime = true;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
   initNTP();
 }
 
@@ -240,7 +241,7 @@ void on_item_DaylightSavingTimeOFF_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_DaylightSavingTimeOFF");
   bDayLightSavingTime = false;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
   initNTP();
 }
 
@@ -251,7 +252,7 @@ void on_item_cronoON_selected(MenuItem* p_menu_item)
   bCrono = true;
   SERIAL_OUT.print("Variabile bCrono:");
   SERIAL_OUT.println(bCrono);
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 void on_item_cronoOFF_selected(MenuItem* p_menu_item)
 {
@@ -259,8 +260,9 @@ void on_item_cronoOFF_selected(MenuItem* p_menu_item)
   bCrono = false;
   SERIAL_OUT.print("Variabile bCrono:");
   SERIAL_OUT.println(bCrono);
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
+
 void on_item_cronoSET_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_cronoSET_selected");
@@ -283,36 +285,37 @@ void on_item_cronoLEARN_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_cronoLEARN_selected");
   bCronoLearn = true;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
 void on_item_systemEnabledON_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_systemEnabledON_selected");
   setSystem(true);
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
+
 void on_item_systemEnabledOFF_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_systemEnabledOFF_selected");
   setSystem(false);
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
-
 void on_item_layout1_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_layout1_selected");
   bLayout1 = true;
   bLayout2 = false;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
+
 void on_item_layout2_selected(MenuItem* p_menu_item)
 {
   SERIAL_OUT.println("on_item_layout2_selected");
   bLayout1 = false;
   bLayout2 = true;
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 
 void on_item_system1_selected(MenuItem* p_menu_item)
@@ -323,7 +326,6 @@ void on_item_system1_selected(MenuItem* p_menu_item)
 
 
 void initMenu() {
-
   // Menu setup
   muMenu.add_item(&mm_miExit, &on_item_MenuExit_selected);
   muMenu.add_menu(&muMenu_mi_Bright);
@@ -485,6 +487,10 @@ boolean getDoSystemReset() {
   return bDoSystemReset;
 }
 
+float getOffsetDHT() {
+  return fOffsetDHT;
+}
+
 void ReadAllSettingsFromPreferences() {
   SERIAL_OUT.println("Read ALL Preferences value....");
   iDisplayBright = BRIGHT_MIN_DEFAULT;
@@ -496,8 +502,9 @@ void ReadAllSettingsFromPreferences() {
   bLayout2 = LAYOUT_CIRCULAR;
   tZone = TIME_ZONE;
   bDayLightSavingTime = DAYLIGHTSAVINGTIME;
+  fOffsetDHT = OFFSET_DHT;
 
-  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2);
+  save_spiffs_prefs(iDisplayBright, bClock, tZone, bDayLightSavingTime, bCrono, bCronoLearn, bSystem, bLayout1, bLayout2, fOffsetDHT);
 }
 void ReadAllSettingsFromSPIFFS() {
   //SPIFFS
@@ -512,4 +519,5 @@ void ReadAllSettingsFromSPIFFS() {
   bLayout2 = read_spiffs_prefs("Layout2");
   tZone = read_spiffs_prefs("Tzone");
   bDayLightSavingTime = read_spiffs_prefs("DayLightSavingTime");
+  fOffsetDHT = read_spiffs_prefs("OffsetDHT");
 }
diff --git a/e05_ESP8266_SST_webconf/menu.h b/e05_ESP8266_SST_webconf/menu.h
index 7848e5a..da0b5be 100644
--- a/e05_ESP8266_SST_webconf/menu.h
+++ b/e05_ESP8266_SST_webconf/menu.h
@@ -15,6 +15,7 @@ int getDisplayBright();
 boolean getClock();
 int getTimeZone();
 boolean getDayLightSavingTime();
+float getOffsetDHT();
 
 boolean getLocalSystem();
 boolean getCrono();
diff --git a/e05_ESP8266_SST_webconf/preferences.default.to.rename b/e05_ESP8266_SST_webconf/preferences.default.to.rename
index 8f32d77..9b7488c 100644
--- a/e05_ESP8266_SST_webconf/preferences.default.to.rename
+++ b/e05_ESP8266_SST_webconf/preferences.default.to.rename
@@ -39,6 +39,9 @@
 #define POWERFULL_RELATIVE
 //#define POWERFULL_FIXED
 
+//OFFSET DHT
+#define OFFSET_DHT 0.0
+
 //TTD - Track to Developers
 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 #define TTD
diff --git a/e05_ESP8266_SST_webconf/read_save.cpp b/e05_ESP8266_SST_webconf/read_save.cpp
index 4f55a13..3cfb996 100644
--- a/e05_ESP8266_SST_webconf/read_save.cpp
+++ b/e05_ESP8266_SST_webconf/read_save.cpp
@@ -4,7 +4,7 @@
 #include "FS.h"
 #include <ArduinoJson.h>
 
-void save_spiffs_prefs(int json_iDisplayBright, int json_bClock, int json_timeZone, int json_DayLightSavingTime, int json_bCrono, int json_bCronoLearn, int json_bSystem, int json_bLayout1, int json_bLayout2) {
+void save_spiffs_prefs(int json_iDisplayBright, int json_bClock, int json_timeZone, int json_DayLightSavingTime, int json_bCrono, int json_bCronoLearn, int json_bSystem, int json_bLayout1, int json_bLayout2, float json_fOffsetDHT) {
   SPIFFS.begin();
   StaticJsonBuffer<200> jsonBuffer;
   JsonObject& root = jsonBuffer.createObject();
@@ -17,6 +17,7 @@ void save_spiffs_prefs(int json_iDisplayBright, int json_bClock, int json_timeZo
   root["Dispositivo"] = json_bSystem;
   root["Layout1"] = json_bLayout1;
   root["Layout2"] = json_bLayout2;
+  root["OffsetDHT"] = json_fOffsetDHT;
   //Serial.print("Ecco i dati in json: ");
   //root.printTo(Serial);
   char buffer[256];
diff --git a/e05_ESP8266_SST_webconf/read_save.h b/e05_ESP8266_SST_webconf/read_save.h
index bbd085c..e7f28e5 100644
--- a/e05_ESP8266_SST_webconf/read_save.h
+++ b/e05_ESP8266_SST_webconf/read_save.h
@@ -1,6 +1,6 @@
 #include <Arduino.h>
 
 int read_spiffs_prefs(const char*);
-void save_spiffs_prefs(int, int, int, int, int, int, int, int, int);
+void save_spiffs_prefs(int, int, int, int, int, int, int, int, int, float);
 void spiffs_Reset();
 
-- 
2.7.4.windows.1

